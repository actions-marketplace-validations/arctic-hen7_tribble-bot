version = "0.3.2"

[scripts]
release.cmd = [
    "git checkout stable",
    "git merge main",
    # We allow specifying a custom version for pre-releases
    "standard-version --sign --commit-all %%",
    "git push --follow-tags origin stable",
    "git checkout main",
    "git merge stable",
    "git push origin main",
    # Merge and push for a special branch used by people to reference the latest version
    "git checkout v0",
    "git merge main",
    "git push origin v0",
    "git checkout main"
]
release.desc = "creates a new release and pushes it (invoking CI on GitHub)"
replace-versions.cmd = "find . \\( \\( -name \"*package.json\" -or -name \"package-lock.json\" -or -name \"*.md\" \\) -not -name \"CHANGELOG.md\" -not -path \"./node_modules/*\" \\) -exec sed -i -e 's/%old_version/%new_version/g' {} \\;"
replace-versions.args = [ "old_version", "new_version" ]
